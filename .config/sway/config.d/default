# Logo key. Use Mod1 for Alt.
set $mod Mod4

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Your preferred terminal emulators
#set $term-float xfce4-terminal
set $term-float alacritty

# Your preferred application launcher
# Note: pass the final command to swaymsg so that the resulting window can be opened
# on the original workspace that the command was run on.
set $menu wofi -c ~/.config/wofi/config -I

set $powermenu ~/.config/waybar/scripts/power-menu.sh

# wob
# set $WOBSOCK "$XDG_RUNTIME_DIR/wob.sock"

### Idle configuration
exec swayidle -w\
    timeout 1070 'swaylock -f -C ~/.config/swaylock/config'\
    timeout 770 'swaymsg "output * dpms off"' \
    resume 'swaymsg "output * dpms on"' \
    before-sleep 'swaylock -C ~/.config/swaylock/config'
# This will lock your screen after 300 seconds of inactivity, then turn off
# your displays after another 300 seconds, and turn your screens back on when
# resumed. It will also lock your screen before your computer goes to sleep.

## Lock Screen
    bindsym $mod+l exec ~/.config/sway/scripts/lockman.sh

### Key bindings
#
# Basics:
#
    # Start a floating terminal
    bindsym $mod+Return exec $term-float

    # Open the power menu
    bindsym $mod+Shift+e exec $powermenu

    # Kill focused window
    bindsym $mod+q kill

    # Start your launcher
    bindsym $mod+d exec $menu

    # Activities
    bindsym $mod+p exec ~/.config/wofi/windows.py
    bindsym $mod+Escape exec ~/.config/wofi/windows.py

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Assume you are on workspace "1: www" and switch to "2: IM" using mod+2 
    # because somebody sent you a message. You donâ€™t need to remember 
    # where you came from now, you can just press $mod+2 again to switch back to "1: www".
    workspace_auto_back_and_forth yes

#
# Moving around:
#
    # Move your focus around
    #bindsym $mod+$left focus left
    #bindsym $mod+$down focus down
    #bindsym $mod+$up focus up
    #bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    #bindsym $mod+Shift+$left move left
    #bindsym $mod+Shift+$down move down
    #bindsym $mod+Shift+$up move up
    #bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.

    # CUSTOM prev/next workspace
    set $next_or_new swaymsg -r -t get_workspaces | \
        jq -r --arg OUTPUT "$(swaymsg -t get_outputs -r | \
        jq -r '.[] | select(.focused == true) | .name')" \
        '(. | (max_by(.num) | .num)) as $max | [.[] | select(.output == $OUTPUT)] | \
        (max_by(.num) | .num) as $maxOutput | (.[] | select(.focused == true) | \
        .num) as $current | if $maxOutput > $current then "next_on_output" else $max + 1 end'

    set $previous_or_first swaymsg -r -t get_workspaces | jq -r --arg OUTPUT "$(swaymsg -t get_outputs -r | \
        jq -r '.[] | select(.focused == true) | .name')" \
        '(. | (max_by(.num) | .num)) as $max | [.[] | select(.output == $OUTPUT)] | \
        (min_by(.num) | .num) as $minOutput | (.[] | select(.focused == true) | .num) as $current | \
        if $minOutput < $current then "prev_on_output" else $current end'

    # switch
    bindsym $mod+Next workspace next
    bindsym $mod+Prior workspace prev
    # move
    # move next, if it exists
    bindsym $mod+Shift+Next move container to workspace next, workspace next
    # move next and create if does not exist
    bindsym Alt+Shift+Next exec swaymsg "move container to workspace $($next_or_new), workspace next_on_output"
    # move prev if it exists
    bindsym $mod+Shift+Prior move container to workspace prev, workspace prev
    # move prev and create if does not exist
    bindsym Alt+Shift+Prior exec swaymsg "move container to workspace $($previous_or_first), workspace prev_on_output"

#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+b splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $right resize grow width 10px
    bindsym $up resize shrink height 10px
    bindsym $down resize grow height 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Right resize grow width 10px
    bindsym Up resize shrink height 10px
    bindsym Down resize grow height 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}

    bindsym $mod+r mode "resize"

    # Resize floating windows with mouse scroll:
    bindsym --whole-window --border $mod+button4 resize shrink height 5 px or 5 ppt
    bindsym --whole-window --border $mod+button5 resize grow height 5 px or 5 ppt
    bindsym --whole-window --border $mod+Shift+button4 resize shrink width 5 px or 5 ppt
    bindsym --whole-window --border $mod+Shift+button5 resize grow width 5 px or 5 ppt

#
# Volume
#
    bindsym {
        XF86AudioRaiseVolume exec ~/.config/scripts/volumecontrol.sh up 5 $WOBSOCK
        XF86AudioLowerVolume exec ~/.config/scripts/volumecontrol.sh down 5 $WOBSOCK
        XF86AudioRaiseVolume+Shift exec ~/.config/scripts/volumecontrol.sh up 20 $WOBSOCK
        XF86AudioLowerVolume+Shift exec ~/.config/scripts/volumecontrol.sh down 20 $WOBSOCK
        XF86AudioMute exec ~/.config/scripts/volumecontrol.sh mute_sink 0 $WOBSOCK
        XF86AudioMicMute exec ~/.config/scripts/volumecontrol.sh mute_source 0 $WOBSOCK
    }
    # bindsym XF86AudioMute exec pactl set-sink-mute @DEFAULT_SINK@ toggle
    # bindsym XF86AudioRaiseVolume exec pactl set-sink-volume @DEFAULT_SINK@ +5%
    # bindsym XF86AudioLowerVolume exec pactl set-sink-volume @DEFAULT_SINK@ -5%

    # bindsym --locked XF86AudioRaiseVolume exec pamixer -ui 2
    # bindsym --locked XF86AudioLowerVolume exec pamixer -ud 2
    # bindsym --locked XF86AudioMute exec pamixer -t
#
# Player
#
    bindsym XF86AudioPlay exec playerctl play
    bindsym XF86AudioPause exec playerctl pause
    bindsym XF86AudioNext exec playerctl next
    bindsym XF86AudioPrev exec playerctl previous
#
# Backlight
#
    bindsym {
        XF86MonBrightnessUp exec brightnessctl set +5% | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
        XF86MonBrightnessDown exec brightnessctl set 5%- | sed -En 's/.*\(([0-9]+)%\).*/\1/p' > $WOBSOCK
    }
    # bindsym XF86MonBrightnessUp exec brightnessctl -c backlight set +5%
    # bindsym XF86MonBrightnessDown exec brightnessctl -c backlight set 5%-
#
# App shortcuts
#
    bindsym $mod+n exec thunar
    #bindsym $mod+o exec firefox
    bindsym $mod+o exec google-chrome
#
# Screenshots
#
    bindsym print exec /usr/share/sway/scripts/grimshot --notify save output
    bindsym Shift+print exec ~/.config/sway/scripts/screenshot.sh
#
# Keybindings List
#
    bindsym $mod+t exec xed ~/.config/sway/cheatsheet

# CUSTOM #
    # toggle bar
    bindsym Alt+space exec killall -SIGUSR1 waybar
    # prev workspace on monitor
    bindsym $mod+comma workspace prev_on_output
    # next workspace on monitor
    bindsym $mod+period workspace next_on_output
    # windows style alt tab
    bindsym $mod+Tab workspace back_and_forth

    # launch or switch to chrome
    bindsym $mod+Shift+o exec ~/.config/sway/scripts/sway-run-or-raise google-chrome "google-chrome" "google-chrome-stable"

    #bindsym $mod+Control+Shift+Right move workspace to output right
    #bindsym $mod+Control+Shift+Left move workspace to output left
    #bindsym $mod+Control+Shift+Down move workspace to output down
    #bindsym $mod+Control+Shift+Up move workspace to output up

    # swaysome - awesomewm style workspaces
    # make conditional on external monitor detection
    # include ~/.config/sway/config.d/*.conf

    # MOVED TO GREETD CONFIGS
    # env vars to dbus for xdg-desktop-portal-wlr
    # exec systemctl --user import-environment

